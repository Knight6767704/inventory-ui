name: Test and Release

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_dispatch:

jobs:
  test:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: https://github.com/docker/scout-demo-service.git#fix-all-cves
          push: false
          load: true
          tags: docker/scout-demo-service:fix
      - name: TEST quickview no image
        uses: ./
        with:
          command: quickview
          write-comment: false
      - name: TEST quickview
        uses: ./
        with:
          command: quickview
          image: docker/scout-demo-service:main
          write-comment: false
      - name: TEST cves
        uses: ./
        with:
          command: cves
          image: docker/scout-demo-service:main
          write-comment: false
      - name: TEST compare images
        uses: ./
        with:
          command: compare
          image: registry://docker/scout-demo-service:main
          to: local://docker/scout-demo-service:fix
          exit-code: false
          write-comment: false

  release:
    if: startsWith(github.head_ref, 'release/v')
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.tagname.outputs.value }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Tag name
        uses: mad9000/actions-find-and-replace-string@2
        id: tagname
        with:
          source: ${{ github.head_ref }}
          find: 'release/'
          replace: ''
      - name: Major version
        uses: ashley-taylor/regex-property-action@v1.3
        id: major
        with:
          value: ${{ steps.tagname.outputs.value }}
          regex: "\\.\\d+\\.\\d+$"
          replacement: ''
      - name: Merge and Tag
        run: |
          git config --unset-all http.https://github.com/.extraheader
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "${GITHUB_ACTOR}"
          git merge --ff-only origin/${{ github.head_ref }}
          git tag ${{ steps.tagname.outputs.value }}
          git push https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main --tags
          git tag -f ${{ steps.major.outputs.value }}
          git push https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main -f --tags

  create_release:
    needs:
      - release
    uses: ./.github/workflows/release.yml
    permissions:
      contents: write
    with:
      tag: ${{ needs.release.outputs.tag }}

---

name: Build and Push Docker Images for Microfrontends

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        microfrontend: [admin, inventory, sales, shell, wearhouse]

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.microfrontend }}-${{ hashFiles('./projects/${{ matrix.microfrontend }}/Dockerfile.${{ matrix.microfrontend }}') }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.microfrontend }}-

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Preprocess repository owner to lowercase (for use in image tags)
      - name: Preprocess repository owner to lowercase
        id: preprocess
        run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Build Docker image for the microfrontend
      - name: Build Docker image for ${{ matrix.microfrontend }}
        run: |
          docker build -f ./projects/${{ matrix.microfrontend }}/Dockerfile.${{ matrix.microfrontend }} \
            -t ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.microfrontend }}-ui:${{ github.sha }} .

      # Push Docker image for the microfrontend
      - name: Push Docker image for ${{ matrix.microfrontend }}
        run: |
          docker push ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.microfrontend }}-ui:${{ github.sha }}

      # Push Docker image with 'latest' tag
      - name: Push Docker image with 'latest' tag
        run: |
          docker tag ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.microfrontend }}-ui:${{ github.sha }} ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.microfrontend }}-ui:latest
          docker push ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.microfrontend }}-ui:latest

      # Docker Scout - Vulnerability Scan
      - name: Docker Scout - Vulnerability Scan
        id: docker-scout
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.microfrontend }}-ui:${{ github.sha }}
          only-severities: critical,high
          github-token: ${{ secrets.GITHUB_TOKEN }}
          exit-code: true
