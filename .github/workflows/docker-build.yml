jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        microfrontend: [admin, inventory, sales, shell, wearhouse]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.microfrontend }}-${{ hashFiles('./projects/${{ matrix.microfrontend }}/Dockerfile.${{ matrix.microfrontend }}') }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.microfrontend }}-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Preprocess repository owner to lowercase
        id: preprocess
        run: echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Docker image for ${{ matrix.microfrontend }}
        run: |
          docker build -f ./projects/${{ matrix.microfrontend }}/Dockerfile.${{ matrix.microfrontend }} \
            -t ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.microfrontend }}-ui:${{ github.sha }} .

      - name: Push Docker image for ${{ matrix.microfrontend }}
        run: |
          docker push ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.microfrontend }}-ui:${{ github.sha }}

      - name: Push Docker image with 'latest' tag
        run: |
          docker tag ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.microfrontend }}-ui:${{ github.sha }} ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.microfrontend }}-ui:latest
          docker push ghcr.io/${{ env.REPO_OWNER }}/${{ matrix.microfrontend }}-ui:latest

      - name: Docker Scout
        id: docker-scout
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/scout-action@dd36f5b0295baffa006aa6623371f226cc03e506
        with:
          command: cves
          image: ${{ steps.meta.outputs.tags }}
          only-severities: critical,high
          exit-code: true
